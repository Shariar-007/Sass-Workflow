// variable declear topic
$gray: #ccc;
$height: 500px;
$class: element;
$imagelink: 'http://hdwpro.com/wp-content/uploads/2016/03/Widescreen-Nature-Background.jpeg';
$SecondString: 'no-repeat';
$rgb: rgb(230, 230, 230);
//list 
$list: 15px solid blue;
// for later lesson
$map: ( "key": "value", "color": blue);
$bool: true;
$null: null;
$el: Button;
$color: white;
body {
    background-color: $color;
    height: $height;
}

;
// div {
//     .element {
//         color: green;
//     }
//     #element {
//         color: red;
//     }
// }
//another way when id of divition is in variable
div ##{$class} {
    color: green;
    background: white;
    border: $list;
    height: 200px;
    width: 400px;
}

//another way when class name is in variable
div .#{$class} {
    color: red;
    background: url($imagelink) $rgb;
}

// inheritated properties
#parent {
    background: green;
    #child-one,
    .child-three,
    .child-four {
        background: yellow;
        font-size: 1em;
    }
    #child-Two {
        font-weight: 100;
        #inner-child .content {
            background: blue;
        }
    }
    // & use for reduce a space between class and class or class and id
    &.HasClass ##{$el} {
        background: blue;
        font-weight: bold;
        font-style: italic;
    }
}

// extend example
%shared {
    background: blue;
    font-size: 2em;
}

.content {
    @extend %shared;
}

#parent %shared .child {
    background: blue;
    font-size: 2em;
}

.content {
    @extend %shared;
}

.sign,
video,
img {
    @extend %shared;
}

// mixins
@mixin cssProperties {
    main {
        color: green;
        background: blue;
        line-height: 1.8;
    }
}

@mixin cssProperties($argOne) {
    main {
        color: green;
        background: blue;
        line-height: 1.8;
    }
}

body {
    color: burlywood;
    width: 300px;
    @include cssPropertiesgreen($color);
}